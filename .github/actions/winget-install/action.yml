name: "Install Winget"
description: "Install winget on windows runners since its not installed by default: https://github.com/actions/runner-images/issues/6472"
inputs:
  GITHUB_TOKEN:
    description: 'GitHub token to execute authenticated Github API requests (for higher rate limit)'
    required: true
runs:
  using: "composite"
  steps:
    - name: Get URIs for Latest Winget assets
      shell: pwsh
      run: |
        $AuthenticatedHeaders = @{ "Authorization" = "Bearer ${{ inputs.GITHUB_TOKEN }}" }

        $LatestReleaseInfo = Invoke-RestMethod -Headers $AuthenticatedHeaders 'https://api.github.com/repos/microsoft/winget-cli/releases/latest'
        $LatestWingetDownloadUri = $LatestReleaseInfo.assets.browser_download_url | Where-Object { $_.EndsWith('.msixbundle') }
        $LatestWingetLicenseDownloadUri = $LatestReleaseInfo.assets.browser_download_url | Where-Object { $_.EndsWith('License1.xml') }

        # Print to logs
        Write-Host "LatestWingetDownloadUri=$LatestWingetDownloadUri"
        Write-Host "LatestWingetLicenseDownloadUri=$LatestWingetLicenseDownloadUri"

        # Save output for next step
        Write-Output "LatestWingetDownloadUri=$LatestWingetDownloadUri" >> $env:GITHUB_ENV
        Write-Output "LatestWingetLicenseDownloadUri=$LatestWingetLicenseDownloadUri" >> $env:GITHUB_ENV

    - name: Download Winget Assets and Dependencies
      shell: pwsh
      run: |
        New-Item -Type Directory $env:RUNNER_TEMP/winget-install

        # v2.8.6 GitHub release of Xaml does not have an appx file, so we need to get it from nuget
        Invoke-WebRequest -Uri https://www.nuget.org/api/v2/package/Microsoft.UI.Xaml/2.8.6 -OutFile $env:RUNNER_TEMP/winget-install/microsoft.ui.xaml.2.8.6.zip
        Expand-Archive -Path $env:RUNNER_TEMP/winget-install/microsoft.ui.xaml.2.8.6.zip -DestinationPath $env:RUNNER_TEMP/winget-install/microsoft.ui.xaml.2.8.6

        Invoke-WebRequest -Uri https://aka.ms/Microsoft.VCLibs.x64.14.00.Desktop.appx -OutFile $env:RUNNER_TEMP/winget-install/Microsoft.VCLibs.x64.14.00.Desktop.appx # Needed per https://github.com/microsoft/winget-cli/blob/21de1607ed5c90174e6bb931406975c18681a5dd/README.md?plain=1#L35C19-L35C19
        Invoke-WebRequest -Headers $AuthenticatedHeaders -Uri $env:LatestWingetDownloadUri -OutFile $env:RUNNER_TEMP/winget-install/winget.msixbundle
        Invoke-WebRequest -Headers $AuthenticatedHeaders -Uri $env:LatestWingetLicenseDownloadUri -OutFile $env:RUNNER_TEMP/winget-install/license.xml

    - name: Start Winget Installation
      shell: pwsh
      run: |
        Add-AppxProvisionedPackage -Verbose -Online -PackagePath $env:RUNNER_TEMP/winget-install/winget.msixbundle -LicensePath $env:RUNNER_TEMP/winget-install/license.xml -DependencyPackagePath $env:RUNNER_TEMP/winget-install/microsoft.ui.xaml.2.8.6/tools/AppX/x64/Release/Microsoft.UI.Xaml.2.8.appx, $env:RUNNER_TEMP/winget-install/Microsoft.VCLibs.x64.14.00.Desktop.appx

    - name: Wait for Completion of Winget Installation
      shell: pwsh
      run: |
        while ((Get-Command * | Select-String winget)?.ToString() -ne "winget.exe") {
          Start-Sleep -Seconds 1
        }
        Write-Output "Winget Version: $(winget --version)"
